package Net::IRR::Read;

use strict;
use warnings;

use Carp;
use YAML::Tiny;

BEGIN {
	our ($VERSION);
	$VERSION = 0.11;
}

# where to find cache files
our $Data_Dir = '/tmp';
our $Cache_Prefix = 'irr-cache';


my $asn = '';
my $afi = '';
my $loaded = 0;
my $asn_list = [];
my $route_list = [];


sub get_asn_string {
	return join(', ', @{ get_asn_list(@_) });
}


sub get_asn_list {
	_read_args(@_);
	if ($loaded == 0) {
		_load_data_file();
	}
	return $asn_list;
}


sub get_route_string {
	return join(', ', @{ get_route_list(@_) });
}


sub get_route_list {
	_read_args(@_);
	if ($loaded == 0) {
		_load_data_file();
	}
	return $route_list;
}


# Loads current AS data from irr-data YAML file.
sub _load_data_file {
	my $data_path = $Data_Dir.'/'.$Cache_Prefix.'.'.$afi.'.yaml';
	my $yaml = YAML::Tiny->read( $data_path );
	if (!defined $yaml || !defined $yaml->[0]->{ $asn }) {
		return;
	}
	$asn_list = $yaml->[0]->{ $asn }->{asn_list};
	$route_list = $yaml->[0]->{ $asn }->{route_list};
	$loaded = 1;
}


sub _read_args {
	my %conf = @_;
	if ($conf{asn} ne $asn || $conf{afi} ne $afi) {
		$loaded = 0;
		$asn_list = [];
		$route_list = [];
	}
	$asn = $conf{asn};
	$afi = $conf{afi};
}

1;

=pod

=head1 NAME

Net::IRR::Read - Read data cached by L<Net::IRR::Cache>

=head1 PREAMBLE

This library returns data from a YAML data file generated by L<Net::IRR::Cache>.
You can retrieve a list of AS numbers and routes for a given AS and address
family.

=head1 SYNOPSIS

    use Net::IRR::Read;

    # Get AS numbers cached for AS
    my $arrayref = Net::IRR::Read::get_asn_list('2107', 'ipv4');

    # Get a string of IPv6 routes cached for AS
    my $string = Net::IRR::Read::get_route_list('2107', 'ipv6');

=head1 DESCRIPTION

This module provides a quick way to use cached IRR data saved by Net::IRR::Cache
without having to provide all the data the Cache module needs and without having
to parse the YAML cache file yourself.

Each read function needs only two arguments: AS number the data is stored under
and address family.

=head1 FUNCTIONS

=head2 get_asn_list ($as, $afi)

Returns an array reference with AS numbers currently cached for given AS.

=head2 write $file

Writes data in the current object to a cache file.

Data is written to a YAML file with the current ASN as key. This key contains
two more keys: asn_list with all AS numbers loaded and route_list with all IPv4
or IPv6 prefixes.

Any existing data in the cache file current ASN is removed before writing new
data. All other data in the file is preserved. (Limitations of L<YAML::Tiny>
module apply.)

If you do not specify a file to wite to, the destination is generated based on
C<$Data_Dir>, C<$Cache_Prefix> and current address family. For example:
C</tmp/irr-cache.ipv6.yaml>.

=head2 get_asn_list ($as, $afi)

Return a listref with loaded AS numbers for current ASN and AFI.

=head2 get_route_list ($as, $afi)

Return a listref with loaded routes for current ASN and AFI.

=head2 get_asn_string ($as, $afi)

Return a string with loaded AS numbers joined with ', '.

=head2 get_route_string ($as, $afi)

Return a string with loaded routes joined with ', '.

=head1 AUTHOR

Matej Vadnjal E<lt>matej@vadnjal.netE<gt>

=head1 COPYRIGHT

Copyright 2012 Matej Vadnjal.

This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.

The full text of the license can be found in the
LICENSE file included with this module.

=cut
